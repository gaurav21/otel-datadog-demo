ingest: true
.standard: &override
  envOverrides:
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: 'http://$(HOST_IP):$(OTLP_PORT_1)'
    - name: LOCUST_HEADLESS
      value: "true"
opentelemetry-demo:
  default:
    envOverrides:
      - name: HOST_IP
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: OTLP_PORT_1
        value: "4317"
      - name: OTLP_PORT_2
        value: "4318"
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: >-
          service.name=$(OTEL_SERVICE_NAME),
          k8s.namespace.name=$(OTEL_K8S_NAMESPACE),
          k8s.node.name=$(OTEL_K8S_NODE_NAME),
          k8s.pod.name=$(OTEL_K8S_POD_NAME),
          deployment.environment=$(OTEL_K8S_NAMESPACE)
  components:
    adService: *override
    redis: *override
    cartService: *override
    checkoutService: *override
    currencyService: *override
    emailService:
      envOverrides:
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://$(HOST_IP):$(OTLP_PORT_1)'
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          value: 'http://$(HOST_IP):$(OTLP_PORT_2)/v1/traces'
        - name: LOCUST_HEADLESS
          value: "true"
    featureflagService: *override
    ffsPostgres: *override
    frontend: *override
    frontendProxy: *override
    loadgenerator: *override
    paymentService: *override
    productCatalogService: *override
    recommendationService: *override
    shippingService: *override
    quoteService: *override
  observability:
    otelcol:
      enabled: false
datadog:
  datadog:
    apiKeyExistingSecret: "datadog-secrets"
    tags:
      - "env:otel-ingest"
    kubelet:
      tlsVerify: false  
    otlp:
      receiver:
        protocols:
          grpc:
            enabled: true
